--프로그램 테이블
CREATE TABLE PROGRAM(
    SEASON NUMBER(1) PRIMARY KEY, --시즌(1, 2, 3, 4)
    PNAME VARCHAR2(10)            --프로그램 명(대탈출, 대탈출2, 대탈출3, 대탈출4)
);

INSERT INTO PROGRAM VALUES (1, '대탈출');
INSERT INTO PROGRAM VALUES (2, '대탈출2');
INSERT INTO PROGRAM VALUES (3, '대탈출3');
INSERT INTO PROGRAM VALUES (4, '대탈출4');

--에피소드 테이블
CREATE TABLE EPISODE(
    SEASON NUMBER(1) REFERENCES PROGRAM(SEASON), --시즌(1, 2, 3, 4)
    ENAME VARCHAR2(30) PRIMARY KEY,              --에피소드 명
    UNIVERSE VARCHAR2(20),                       --세계관(좀비, 귀신, SSA, 타임머신)
    FIRST_BROAD DATE,                            --1부 방영 날짜
    SECOND_BROAD DATE,                           --2부 방영 날짜
    FIRST_RATE NUMBER(4, 3),                     --1부 시청률
    SECOND_RATE NUMBER(4, 3)                     --2부 시청률
);

--시즌1 에피소드
INSERT INTO EPISODE VALUES (1, '사설 도박장', ' ', '2018/07/01', '2018/07/08', 1.397, 1.626); 
INSERT INTO EPISODE VALUES (1, '폐병원', '좀비', '2018/07/15', '2018/07/22', 1.765, 1.557); 
INSERT INTO EPISODE VALUES (1, '유전자 은행', ' ', '2018/07/29', '2018/08/05', 1.699, 1.801); 
INSERT INTO EPISODE VALUES (1, '악령감옥', '귀신', '2018/08/12', '2018/08/19', 1.863, 1.938); 
INSERT INTO EPISODE VALUES (1, '벙커', ' ', '2018/08/26', '2018/09/02', 2.225, 2.135); 
INSERT INTO EPISODE VALUES (1, '태양여고', '귀신', '2018/09/09', '2018/09/16', 2.230, 2.036); 

--시즌2 에피소드
INSERT INTO EPISODE VALUES (2, '미래대학교', 'SSA', '2019/03/17', '2019/03/24', 2.546, 2.048); 
INSERT INTO EPISODE VALUES (2, '부암동 저택', '좀비', '2019/03/31', '2019/04/07', 1.958, 1.749); 
INSERT INTO EPISODE VALUES (2, '무간교도소', '좀비', '2019/04/14', '2019/04/21', 2.001, 1.836); 
INSERT INTO EPISODE VALUES (2, '희망연구소', '좀비', '2019/04/28', '2019/05/05', 1.537, 2.001); 
INSERT INTO EPISODE VALUES (2, '조마테오 정신병원', '귀신', '2019/05/12', '2019/05/19', 1.709, 1.871); 
INSERT INTO EPISODE VALUES (2, '살인감옥', ' ', '2019/05/26', '2019/06/02', 1.765, 2.955); 

--시즌3 에피소드
INSERT INTO EPISODE VALUES (3, '타임머신 연구실', '타임머신', '2020/03/01', '2020/03/08', 2.740, 2.333); 
INSERT INTO EPISODE VALUES (3, '좀비공장', '좀비', '2020/03/15', '2020/03/22', 2.767, 2.272); 
INSERT INTO EPISODE VALUES (3, '어둠의 별장', '귀신', '2020/03/29', '2020/04/05', 2.871, 2.958); 
INSERT INTO EPISODE VALUES (3, '아차랜드', ' ', '2020/05/03', '2020/05/10', 2.705, 2.566); 
INSERT INTO EPISODE VALUES (3, '빵공장', 'SSA', '2020/05/17', '2020/05/24', 2.633, 2.717); 
INSERT INTO EPISODE VALUES (3, '백 투 더 경성', '타임머신', '2020/05/31', '2020/06/07', 2.570, 2.528); 

--시즌4 에피소드
INSERT INTO EPISODE VALUES (4, '백 투 더 아한', '타임머신', '2021/07/11', '2021/07/18', 2.828, 1.949); 
INSERT INTO EPISODE VALUES (4, '럭키랜드', ' ', '2021/07/25', '2021/08/01', 2.003, 1.954); 
INSERT INTO EPISODE VALUES (4, '적송교도소', '좀비', '2021/08/08', '2021/08/15', 2.001, 2.289); 
INSERT INTO EPISODE VALUES (4, '크레이지 하우스', ' ', '2021/08/22', '2021/08/29', 2.087, 2.110); 
INSERT INTO EPISODE VALUES (4, '제3공업단지', 'SSA', '2021/09/05', '2021/09/12', 2.412, 2.272); 
INSERT INTO EPISODE VALUES (4, '하늘에 쉼터', 'SSA', '2021/09/19', '2021/09/26', 2.581, 1.976); 

--
SELECT * FROM PROGRAM; --프로그램 테이블 보기
SELECT * FROM EPISODE; --에피소드 테이블 보기

--두 테이블 조인
SELECT P.SEASON, P.PNAME, E.ENAME, E.UNIVERSE, E.FIRST_BROAD, E.SECOND_BROAD, E.FIRST_RATE, E.SECOND_RATE
FROM PROGRAM P
JOIN EPISODE E
ON P.SEASON = E.SEASON;

--뷰로 생성
CREATE VIEW V_PRO
AS
    SELECT P.SEASON, P.PNAME, E.ENAME, E.UNIVERSE, E.FIRST_BROAD, E.SECOND_BROAD, E.FIRST_RATE, E.SECOND_RATE
    FROM PROGRAM P
    JOIN EPISODE E
    ON P.SEASON = E.SEASON;
    
--전체 출력
SELECT * FROM V_PRO;
    
--각 시즌별 에피소드 출력
    
--시즌1 출력
SELECT * FROM V_PRO WHERE SEASON = 1;

--시즌2 출력
SELECT * FROM V_PRO WHERE SEASON = 2;

--시즌3 출력
SELECT * FROM V_PRO WHERE SEASON = 3;

--시즌4 출력
SELECT * FROM V_PRO WHERE SEASON = 4;

--각 세계관별 에피소드 출력

--좀비 세계관 출력
SELECT * FROM V_PRO WHERE UNIVERSE = '좀비';

--귀신 세계관 출력
SELECT * FROM V_PRO WHERE UNIVERSE = '귀신';

--SSA 세계관 출력
SELECT * FROM V_PRO WHERE UNIVERSE = 'SSA';

--타임머신 세계관 출력
SELECT * FROM V_PRO WHERE UNIVERSE = '타임머신';

--각 시즌별 1부, 2부 통틀어 시청률이 가장 높은 에피소드 출력
SELECT MAX(GREATEST(FIRST_RATE, SECOND_RATE))
FROM V_PRO
GROUP BY SEASON;

SELECT *
FROM V_PRO
WHERE GREATEST(FIRST_RATE, SECOND_RATE) IN (
      SELECT MAX(GREATEST(FIRST_RATE, SECOND_RATE))
      FROM V_PRO
      GROUP BY SEASON
);






